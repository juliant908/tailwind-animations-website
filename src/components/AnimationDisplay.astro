---
import CopyIcon from "../components/CopyIcon.astro";
import {formatTitle} from "../utils/formatters";
const {categoryTitle, categoryItems} = Astro.props;
---

<h2
 class="mb-4 max-w-4xl mx-auto mt-8 font-bold md:text-3xl text-xl animate-fade-in-right"
 id={categoryTitle}
>
 {formatTitle(categoryTitle) + " animations"}
</h2>
<section
 class="max-w-4xl mx-auto mt-8 mb-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"
>
 {
  categoryItems.map((item) => (
   <article
    class="cursor-crosshair border-2 border-gray-300  rounded-md hover:border-gray-300/50 overflow-y-hidden transition relative"
    data-class={item}
   >
    <div class="icon-holder absolute top-2 right-2 text-transparent transition">
     <CopyIcon />
    </div>
    <div class="flex h-full w-full flex-col items-center justify-center gap-4 p-4">
     <span
      class={`flex h-16 w-16 items-center justify-center rounded-md bg-[linear-gradient(lightgreen,green)]`}
     />
     <p class="text-xs md:text-base font-semibold opacity-90 text-white">
      {item}
     </p>
    </div>
   </article>
  ))
 }
</section>

<script>
 import Toastify from "toastify-js";

 const $articles = document.querySelectorAll("article");

 $articles.forEach(($article) => {
  const animationKey = $article.getAttribute("data-class");
  const animationClass = "animate-" + animationKey;
  const $box = $article.querySelector("span");
  $article.addEventListener("mouseenter", () => {
   $box?.classList.add(animationClass);
  });

  $article.addEventListener("mouseleave", () => {
   $box?.classList.remove(animationClass);
  });

  $article.addEventListener("click", () => {
   const $icon = $article.querySelector(".icon-holder");
   $icon.innerHTML = `
<svg
 xmlns="http://www.w3.org/2000/svg"
 width="16"
 height="16"
 viewBox="0 0 24 24"
 fill="none"
 stroke="currentColor"
 stroke-width="2"
 stroke-linecap="round"
 stroke-linejoin="round"
 class="icon icon-tabler icons-tabler-outline icon-tabler-checkbox"
 ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
  d="M9 11l3 3l8 -8"></path><path
  d="M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9"
 ></path></svg
>
   `;
   navigator.clipboard.writeText(animationClass);
   Toastify({
    text: "The class was successfully copied to your clipboard!",
    duration: 1000,
    position: "center",
    style: {
     background: "rgb(30 41 59)",
     color: "rgb(209 213 219)",
     borderRadius: "8px",
     cursor: "default",
    },
   }).showToast();
   setTimeout(() => {
    $icon.innerHTML = `
<svg
 xmlns="http://www.w3.org/2000/svg"
 width="16"
 height="16"
 viewBox="0 0 24 24"
 fill="none"
 stroke="currentColor"
 stroke-width="2"
 stroke-linecap="round"
 stroke-linejoin="round"
 class="icon icon-tabler icons-tabler-outline icon-tabler-copy"
 ><path stroke="none" d="M0 0h16v16H0z" fill="none"></path><path
  d="M7 7m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z"
 ></path><path
  d="M4.012 16.737a2.005 2.005 0 0 1 -1.012 -1.737v-10c0 -1.1 .9 -2 2 -2h10c.75 0 1.158 .385 1.5 1"
 ></path></svg
>
    `;
   }, 1000);
  });
 });
</script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"
></script>

<style>
 article:hover {
  div {
   svg {
    color: white;
    transition: color 0.3s;
   }
  }
 }

 article[data-class="background-move"] > div > span {
  background-size: 300% 300%;
  background-image: linear-gradient(to bottom, lightgreen, green);
 }
 article[data-class="background-move"] > div:nth-child(2)::after {
  content: "Make sure to add a background-size property to the element you want to animate (e.g. background-size: 300% 300%;).";
  font-size: 0.5rem;
  text-align: center;
 }
</style>
